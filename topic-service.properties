## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/msref?useSSL=false
spring.datasource.username = root
spring.datasource.password = root

# Eureka server URL. Registration will succeed even without this porperty as this is the default URL
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto = validate
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#The port on which the application will start
server.port = 8082

#I have added the actuator to this service *primarily* (it can be used for other causes as well. For example to retrieve the health of the service) to refresh the config client in case we change the configurations. However the refresh endpoint has to be manually exposed and the following property is used for that. 
# Actuator refresh endpoint - http://localhost:8080/actuator/refresh
# Actuator refresh endpoint method - POST
# Actuator refresh endpoint payload - empty
management.endpoints.web.exposure.include=*

# Zipkin related properties

# By default Sleuth assumes that when you send a span to Zipkin, you want the span’s service name to be equal to spring.application.name value. 
# That’s not always the case though. If you want to customize this, spring.zipkin.service.name can be used.
spring.zipkin.service.name=topic-service
spring.zipkin.sender.type=web
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.percentage=1.0

